{"version":3,"sources":["webpack:///./src/templates/blog-tag.js","webpack:///./src/components/seo.js","webpack:///./src/components/tags.js","webpack:///./src/components/blog-preview.js","webpack:///./src/components/blog.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","_components_blog__WEBPACK_IMPORTED_MODULE_0__","Blog","SEO","_ref","_ref$description","description","_ref$lang","lang","_ref$meta","meta","title","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_helmet__WEBPACK_IMPORTED_MODULE_2__","htmlAttributes","bodyAttributes","class","titleTemplate","name","content","property","author","concat","defer","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_ref$baseUrl","baseUrl","tags","tag","className","group","map","_ref2","fieldValue","totalCount","key","to","slug","fields","_ref$frontmatter","frontmatter","date","excerpt","timeToRead","_seo__WEBPACK_IMPORTED_MODULE_1__","_blog_preview__WEBPACK_IMPORTED_MODULE_2__","_tags__WEBPACK_IMPORTED_MODULE_3__","_ref$data","posts","pageContext","nodes","node","id"],"mappings":"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","file":"component---src-templates-blog-tag-js-e3d2b3cd1f0316c16b64.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport Blog from \"../components/blog\";\n\nexport default Blog;\n\nexport const query = graphql`\n  query($tag: [String]) {\n    tags: allMarkdownRemark(\n      filter: { fields: { slug: { regex: \"//posts//\" } } }\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n    posts: allMarkdownRemark(\n      filter: {\n        fields: { slug: { regex: \"//posts//\" } }\n        frontmatter: { tags: { in: $tag } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        id\n        timeToRead\n        excerpt\n        frontmatter {\n          tags\n          date\n          title\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description = \"\", lang = \"en\", meta = [], title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      bodyAttributes={{\n        class: \"has-navbar-fixed-top\",\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n      // https://github.com/nfl/react-helmet/issues/315\n      defer={false}\n    />\n  );\n}\n\nexport default SEO;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport default ({ baseUrl = \"\", tags, tag }) => (\n  <div className=\"card\">\n    <header className=\"card-header no-box-shadow\">\n      <div className=\"card-header-content\">\n        <p className=\"title is-size-3\">Tags</p>\n      </div>\n    </header>\n    <div className=\"card-content\">\n      <div className=\"tags are-medium\">\n        {tags.group.map(({ fieldValue, totalCount }) => (\n          <span\n            key={fieldValue}\n            className={fieldValue === tag ? \"tag has-text-weight-bold\" : \"tag\"}\n          >\n            <Link\n              to={\n                fieldValue === tag ? baseUrl : `${baseUrl}/tags/${fieldValue}/`\n              }\n            >\n              {fieldValue} ({totalCount})\n            </Link>\n          </span>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport default ({\n  fields: { slug },\n  frontmatter: { title, date },\n  excerpt,\n  timeToRead,\n}) => (\n  <div className=\"card\">\n    <header className=\"card-header no-box-shadow\">\n      <div className=\"card-header-content\">\n        <p className=\"title is-size-3\">\n          <Link to={slug}>{title}</Link>\n        </p>\n        <p className=\"subtitle is-size-6\">\n          <small>\n            {date} â€¢ {timeToRead} min read\n          </small>\n        </p>\n      </div>\n    </header>\n    <div className=\"card-content\">\n      <div className=\"content\">{excerpt}</div>\n    </div>\n  </div>\n);\n","import React, { Fragment } from \"react\";\nimport SEO from \"./seo\";\nimport BlogPreview from \"./blog-preview\";\nimport Tags from \"./tags\";\n\nexport default ({ data: { tags, posts }, pageContext: { tag } }) => {\n  return (\n    <Fragment>\n      <SEO title={tag ? `Blog | ${tag}` : \"Blog\"} />\n      <section className=\"hero is-primary is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">Blog</h1>\n          </div>\n        </div>\n      </section>\n      <div className=\"padded-container\">\n        <div className=\"columns\">\n          <div className=\"column is-three-quarters\">\n            <div className=\"tile is-ancestor is-vertical\">\n              {posts.nodes.map(node => (\n                <div key={node.id} className=\"tile is-parent\">\n                  <article className=\"tile is-child\">\n                    <BlogPreview {...node} />\n                  </article>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"column\">\n            <article className=\"tile is-child\">\n              <Tags tags={tags} tag={tag} baseUrl=\"/blog\" />\n            </article>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}