{"version":3,"sources":["webpack:///./src/templates/project-tag.js","webpack:///./src/components/seo.js","webpack:///./src/components/project-preview.js","webpack:///./src/components/projects.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","_components_projects__WEBPACK_IMPORTED_MODULE_0__","Projects","SEO","_ref","_ref$description","description","_ref$lang","lang","_ref$meta","meta","title","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_helmet__WEBPACK_IMPORTED_MODULE_2__","htmlAttributes","bodyAttributes","class","titleTemplate","name","content","property","author","concat","defer","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_external_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_image__WEBPACK_IMPORTED_MODULE_3__","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","slug","fields","_ref$frontmatter","frontmatter","source","demo","image","className","to","fluid","childImageSharp","alt","url","_ref$data","tags","projects","tag","pageContext","react__WEBPACK_IMPORTED_MODULE_1__","_seo__WEBPACK_IMPORTED_MODULE_3__","lodash_chunk__WEBPACK_IMPORTED_MODULE_0___default","nodes","map","row","index","key","node","id","_project_preview__WEBPACK_IMPORTED_MODULE_4__","group","_ref2","fieldValue","totalCount","gatsby__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-templates-project-tag-js-264c2a31b419f43912b3.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport Projects from \"../components/projects\";\n\nexport default Projects;\n\nexport const query = graphql`\n  query($tag: [String]) {\n    tags: allMarkdownRemark(\n      filter: { fields: { slug: { regex: \"//projects//\" } } }\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: {\n        fields: { slug: { regex: \"//projects//\" } }\n        frontmatter: { tags: { in: $tag } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        id\n        frontmatter {\n          title\n          date\n          description\n          tags\n          source\n          demo\n          image {\n            childImageSharp {\n              fluid(maxWidth: 500, quality: 100) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description = \"\", lang = \"en\", meta = [], title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      bodyAttributes={{\n        class: \"has-navbar-fixed-top\",\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n      // https://github.com/nfl/react-helmet/issues/315\n      defer={false}\n    />\n  );\n}\n\nexport default SEO;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport ExternalLink from \"./external-link\";\nimport Img from \"gatsby-image\";\n\nexport default ({\n  fields: { slug },\n  frontmatter: { title, description, source, demo, image },\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <Link to={slug}>\n        <Img fluid={image.childImageSharp.fluid} alt={title} />\n      </Link>\n    </div>\n    <header className=\"card-header no-box-shadow\">\n      <div className=\"card-header-content\">\n        <p className=\"title is-size-3\">\n          <Link to={slug}>{title}</Link>\n        </p>\n      </div>\n    </header>\n    <div className=\"card-content\">\n      <div className=\"content\">{description}</div>\n    </div>\n    <footer className=\"card-footer\">\n      {source && (\n        <div className=\"card-footer-item no-border\">\n          <ExternalLink url={source}>Code</ExternalLink>\n        </div>\n      )}\n      {demo && (\n        <div className=\"card-footer-item no-border\">\n          <ExternalLink url={demo}>Demo</ExternalLink>\n        </div>\n      )}\n    </footer>\n  </div>\n);\n","import React, { Fragment } from \"react\";\nimport { Link } from \"gatsby\";\nimport { chunk } from \"lodash\";\nimport SEO from \"./seo\";\nimport ProjectPreview from \"./project-preview\";\n\nexport default ({ data: { tags, projects }, pageContext: { tag } }) => {\n  return (\n    <Fragment>\n      <SEO title={tag ? `Projects | ${tag}` : \"Projects\"} />\n      <section className=\"hero is-primary is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">Projects</h1>\n          </div>\n        </div>\n      </section>\n      <div className=\"padded-container\">\n        <div className=\"columns\">\n          <div className=\"column is-three-quarters\">\n            {chunk(projects.nodes, 3).map((row, index) => (\n              <div key={index} className=\"tile is-ancestor\">\n                {row.map(node => (\n                  <div key={node.id} className=\"tile is-parent is-4\">\n                    <article className=\"tile is-child\">\n                      <ProjectPreview {...node} />\n                    </article>\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n          <div className=\"column\">\n            <article className=\"tile is-child\">\n              <p className=\"title\">Tags</p>\n              <div className=\"tags are-medium\">\n                {tags.group.map(({ fieldValue, totalCount }) => (\n                  <span\n                    key={fieldValue}\n                    className={\n                      fieldValue === tag ? \"tag has-text-weight-bold\" : \"tag\"\n                    }\n                  >\n                    <Link\n                      to={\n                        fieldValue === tag\n                          ? \"/projects/\"\n                          : `/projects/tags/${fieldValue}/`\n                      }\n                    >\n                      {fieldValue} ({totalCount})\n                    </Link>\n                  </span>\n                ))}\n              </div>\n            </article>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}