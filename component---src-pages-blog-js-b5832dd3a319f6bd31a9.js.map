{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/seo.js"],"names":["__webpack_exports__","_ref","data","tags","lodash_mapValues__WEBPACK_IMPORTED_MODULE_6___default","lodash_groupBy__WEBPACK_IMPORTED_MODULE_5___default","lodash_flatMap__WEBPACK_IMPORTED_MODULE_7___default","allMarkdownRemark","edges","_ref2","node","frontmatter","arr","length","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_9__","_components_seo__WEBPACK_IMPORTED_MODULE_10__","title","className","map","_ref3","gatsby__WEBPACK_IMPORTED_MODULE_8__","key","id","to","fields","slug","excerpt","Object","keys","sort","tag","query","SEO","_ref$description","description","_ref$lang","lang","_ref$meta","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","htmlAttributes","bodyAttributes","class","titleTemplate","name","content","property","author","concat","defer"],"mappings":"+PAKeA,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACVC,EAAOC,IACXC,IACEC,IAAQJ,EAAKK,kBAAkBC,MAAO,SAAAC,GAAA,OAAAA,EAAGC,KAAgBC,YAAYR,QAEvE,SAAAS,GAAG,OAAIA,EAAIC,SAEb,OACEC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,MAAM,SACXL,EAAAC,EAAAC,cAAA,WAASI,UAAU,2BACjBN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,MAAII,UAAU,SAAd,WAINN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACZlB,EAAKK,kBAAkBC,MAAMa,IAAI,SAAAC,GAAA,IAAGZ,EAAHY,EAAGZ,KAAH,OAChCI,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,IAAKd,EAAKe,GAAIC,GAAIhB,EAAKiB,OAAOC,MAClCd,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAA,WAASI,UAAU,8BACjBN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,SAASV,EAAKC,YAAYQ,OACvCL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWV,EAAKmB,eAMzCf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACbN,EAAAC,EAAAC,cAAA,WAASI,UAAU,iBACjBN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,SAAb,QACAN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACZU,OAAOC,KAAK5B,GACV6B,OACAX,IAAI,SAAAY,GAAG,OACNnB,EAAAC,EAAAC,cAAA,QAAMQ,IAAKS,EAAKb,UAAU,OACxBN,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMG,GAAE,cAAgBO,GACrBA,EADH,KACU9B,EAAK8B,GADf,eAcf,IAAMC,EAAK,qFCoBHC,IAnEf,SAAAlC,GAAkE,IAAAmC,EAAAnC,EAAnDoC,mBAAmD,IAAAD,EAArC,GAAqCA,EAAAE,EAAArC,EAAjCsC,YAAiC,IAAAD,EAA1B,KAA0BA,EAAAE,EAAAvC,EAApBwC,YAAoB,IAAAD,EAAb,GAAaA,EAATrB,EAASlB,EAATkB,MAC/CuB,EADwDC,EAAAzC,KACxDwC,KAcFE,EAAkBP,GAAeK,EAAKG,aAAaR,YAEzD,OACES,EAAA/B,EAAAC,cAAC+B,EAAA,OAAD,CACEC,eAAgB,CACdT,QAEFU,eAAgB,CACdC,MAAO,wBAET/B,MAAOA,EACPgC,cAAa,QAAUT,EAAKG,aAAa1B,MACzCsB,KAAM,CACJ,CACEW,KAAI,cACJC,QAAST,GAEX,CACEU,SAAQ,WACRD,QAASlC,GAEX,CACEmC,SAAQ,iBACRD,QAAST,GAEX,CACEU,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASX,EAAKG,aAAaU,QAE7B,CACEH,KAAI,gBACJC,QAASlC,GAEX,CACEiC,KAAI,sBACJC,QAAST,IAEXY,OAAOf,GAETgB,OAAO","file":"component---src-pages-blog-js-b5832dd3a319f6bd31a9.js","sourcesContent":["import { Link, graphql } from \"gatsby\";\nimport { flatMap, mapValues, groupBy } from \"lodash\";\nimport React, { Fragment } from \"react\";\nimport SEO from \"../components/seo\";\n\nexport default ({ data }) => {\n  const tags = mapValues(\n    groupBy(\n      flatMap(data.allMarkdownRemark.edges, ({ node }) => node.frontmatter.tags)\n    ),\n    arr => arr.length\n  );\n  return (\n    <Fragment>\n      <SEO title=\"Blog\" />\n      <section className=\"hero is-primary is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">Blog</h1>\n          </div>\n        </div>\n      </section>\n      <div className=\"padded-container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-vertical is-8\">\n            {data.allMarkdownRemark.edges.map(({ node }) => (\n              <Link key={node.id} to={node.fields.slug}>\n                <div className=\"tile is-parent\">\n                  <article className=\"tile is-child notification\">\n                    <p className=\"title\">{node.frontmatter.title}</p>\n                    <div className=\"content\">{node.excerpt}</div>\n                  </article>\n                </div>\n              </Link>\n            ))}\n          </div>\n          <div className=\"tile is-vertical is-parent\">\n            <article className=\"tile is-child\">\n              <p className=\"title\">Tags</p>\n              <div className=\"tags are-medium\">\n                {Object.keys(tags)\n                  .sort()\n                  .map(tag => (\n                    <span key={tag} className=\"tag\">\n                      <Link to={`/blog/tags/${tag}`}>\n                        {tag} ({tags[tag]})\n                      </Link>\n                    </span>\n                  ))}\n              </div>\n            </article>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description = \"\", lang = \"en\", meta = [], title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      bodyAttributes={{\n        class: \"has-navbar-fixed-top\",\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n      // https://github.com/nfl/react-helmet/issues/315\n      defer={false}\n    />\n  );\n}\n\nexport default SEO;\n"],"sourceRoot":""}