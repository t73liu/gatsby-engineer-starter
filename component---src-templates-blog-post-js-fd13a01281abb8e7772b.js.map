{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_seo__WEBPACK_IMPORTED_MODULE_1__","_ref","data","title","markdownRemark","frontmatter","a","createElement","className","date","dangerouslySetInnerHTML","__html","html","SEO","_ref$description","description","_ref$lang","lang","_ref$meta","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","htmlAttributes","bodyAttributes","class","titleTemplate","name","content","property","author","concat","defer"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAIeE,EAAA,iBAAAO,GAAc,IAAXC,EAAWD,EAAXC,KACVC,EAAQD,EAAKE,eAAeC,YAAYF,MAC9C,OACEL,EAAAQ,EAAAC,cAACV,EAAA,SAAD,KACEC,EAAAQ,EAAAC,cAACP,EAAA,EAAD,CAAKG,MAAOA,IACZL,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,aACbV,EAAAQ,EAAAC,cAAA,MAAIC,UAAU,aAAaL,GAC3BL,EAAAQ,EAAAC,cAAA,MAAIC,UAAU,aAAaN,EAAKE,eAAeC,YAAYI,MAC3DX,EAAAQ,EAAAC,cAAA,OAAKG,wBAAyB,CAAEC,OAAQT,EAAKE,eAAeQ,WAM7D,IAAMhB,EAAK,qFC4DHiB,IAnEf,SAAAZ,GAAkE,IAAAa,EAAAb,EAAnDc,mBAAmD,IAAAD,EAArC,GAAqCA,EAAAE,EAAAf,EAAjCgB,YAAiC,IAAAD,EAA1B,KAA0BA,EAAAE,EAAAjB,EAApBkB,YAAoB,IAAAD,EAAb,GAAaA,EAATf,EAASF,EAATE,MAC/CiB,EADwDC,EAAAnB,KACxDkB,KAcFE,EAAkBP,GAAeK,EAAKG,aAAaR,YAEzD,OACES,EAAAlB,EAAAC,cAACkB,EAAA,OAAD,CACEC,eAAgB,CACdT,QAEFU,eAAgB,CACdC,MAAO,wBAETzB,MAAOA,EACP0B,cAAa,QAAUT,EAAKG,aAAapB,MACzCgB,KAAM,CACJ,CACEW,KAAI,cACJC,QAAST,GAEX,CACEU,SAAQ,WACRD,QAAS5B,GAEX,CACE6B,SAAQ,iBACRD,QAAST,GAEX,CACEU,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASX,EAAKG,aAAaU,QAE7B,CACEH,KAAI,gBACJC,QAAS5B,GAEX,CACE2B,KAAI,sBACJC,QAAST,IAEXY,OAAOf,GAETgB,OAAO","file":"component---src-templates-blog-post-js-fd13a01281abb8e7772b.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport { graphql } from \"gatsby\";\nimport SEO from \"../components/seo\";\n\nexport default ({ data }) => {\n  const title = data.markdownRemark.frontmatter.title;\n  return (\n    <Fragment>\n      <SEO title={title} />\n      <div className=\"container\">\n        <h1 className=\"is-size-1\">{title}</h1>\n        <h1 className=\"is-size-3\">{data.markdownRemark.frontmatter.date}</h1>\n        <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date\n      }\n    }\n  }\n`;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description = \"\", lang = \"en\", meta = [], title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      bodyAttributes={{\n        class: \"has-navbar-fixed-top\",\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n      // https://github.com/nfl/react-helmet/issues/315\n      defer={false}\n    />\n  );\n}\n\nexport default SEO;\n"],"sourceRoot":""}