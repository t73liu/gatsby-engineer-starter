{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_ref","data","a","createElement","title","className","allMarkdownRemark","edges","map","_ref2","node","key","id","to","fields","slug","frontmatter","excerpt","SEO","_ref$description","description","_ref$lang","lang","_ref$meta","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","htmlAttributes","bodyAttributes","class","titleTemplate","name","content","property","author","concat","defer"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAIeE,EAAA,iBAAAQ,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACbL,EAAAM,EAAAC,cAACR,EAAA,SAAD,KACEC,EAAAM,EAAAC,cAACJ,EAAA,EAAD,CAAKK,MAAM,SACXR,EAAAM,EAAAC,cAAA,WAASE,UAAU,2BACjBT,EAAAM,EAAAC,cAAA,OAAKE,UAAU,aACbT,EAAAM,EAAAC,cAAA,OAAKE,UAAU,aACbT,EAAAM,EAAAC,cAAA,MAAIE,UAAU,SAAd,WAINT,EAAAM,EAAAC,cAAA,OAAKE,UAAU,aACbT,EAAAM,EAAAC,cAAA,OAAKE,UAAU,oBACbT,EAAAM,EAAAC,cAAA,OAAKE,UAAU,0BACZJ,EAAKK,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChCd,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAMa,IAAKD,EAAKE,GAAIC,GAAIH,EAAKI,OAAOC,MAClCnB,EAAAM,EAAAC,cAAA,OAAKE,UAAU,kBACbT,EAAAM,EAAAC,cAAA,WAASE,UAAU,8BACjBT,EAAAM,EAAAC,cAAA,KAAGE,UAAU,SAASK,EAAKM,YAAYZ,OACvCR,EAAAM,EAAAC,cAAA,OAAKE,UAAU,WAAWK,EAAKO,mBAW1C,IAAMvB,EAAK,qFC6CHwB,IAnEf,SAAAlB,GAAkE,IAAAmB,EAAAnB,EAAnDoB,mBAAmD,IAAAD,EAArC,GAAqCA,EAAAE,EAAArB,EAAjCsB,YAAiC,IAAAD,EAA1B,KAA0BA,EAAAE,EAAAvB,EAApBwB,YAAoB,IAAAD,EAAb,GAAaA,EAATnB,EAASJ,EAATI,MAC/CqB,EADwDC,EAAAzB,KACxDwB,KAcFE,EAAkBP,GAAeK,EAAKG,aAAaR,YAEzD,OACES,EAAA3B,EAAAC,cAAC2B,EAAA,OAAD,CACEC,eAAgB,CACdT,QAEFU,eAAgB,CACdC,MAAO,wBAET7B,MAAOA,EACP8B,cAAa,QAAUT,EAAKG,aAAaxB,MACzCoB,KAAM,CACJ,CACEW,KAAI,cACJC,QAAST,GAEX,CACEU,SAAQ,WACRD,QAAShC,GAEX,CACEiC,SAAQ,iBACRD,QAAST,GAEX,CACEU,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASX,EAAKG,aAAaU,QAE7B,CACEH,KAAI,gBACJC,QAAShC,GAEX,CACE+B,KAAI,sBACJC,QAAST,IAEXY,OAAOf,GAETgB,OAAO","file":"component---src-pages-blog-js-636dfdfe0977ce3cfa07.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport SEO from \"../components/seo\";\n\nexport default ({ data }) => (\n  <Fragment>\n    <SEO title=\"Blog\" />\n    <section className=\"hero is-primary is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">Blog</h1>\n        </div>\n      </div>\n    </section>\n    <div className=\"container\">\n      <div className=\"tile is-ancestor\">\n        <div className=\"tile is-vertical is-12\">\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <Link key={node.id} to={node.fields.slug}>\n              <div className=\"tile is-parent\">\n                <article className=\"tile is-child notification\">\n                  <p className=\"title\">{node.frontmatter.title}</p>\n                  <div className=\"content\">{node.excerpt}</div>\n                </article>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  </Fragment>\n);\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description = \"\", lang = \"en\", meta = [], title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      bodyAttributes={{\n        class: \"has-navbar-fixed-top\",\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n      // https://github.com/nfl/react-helmet/issues/315\n      defer={false}\n    />\n  );\n}\n\nexport default SEO;\n"],"sourceRoot":""}