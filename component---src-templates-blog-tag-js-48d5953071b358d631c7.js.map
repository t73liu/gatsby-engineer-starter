{"version":3,"sources":["webpack:///./src/templates/blog-tag.js","webpack:///./src/components/seo.js","webpack:///./src/components/blog-preview.js","webpack:///./src/components/blog.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","_components_blog__WEBPACK_IMPORTED_MODULE_0__","Blog","SEO","_ref","_ref$description","description","_ref$lang","lang","_ref$meta","meta","title","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_helmet__WEBPACK_IMPORTED_MODULE_2__","htmlAttributes","bodyAttributes","class","titleTemplate","name","content","property","author","concat","defer","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","slug","fields","_ref$frontmatter","frontmatter","date","excerpt","timeToRead","className","to","_seo__WEBPACK_IMPORTED_MODULE_2__","_blog_preview__WEBPACK_IMPORTED_MODULE_3__","_ref$data","tags","posts","tag","pageContext","nodes","map","node","key","id","group","_ref2","fieldValue","totalCount"],"mappings":"0FACAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,KAEeM,YAAf,EAEO,IAAMF,EAAK,qFCyEHG,IAnEf,SAAAC,GAAkE,IAAAC,EAAAD,EAAnDE,mBAAmD,IAAAD,EAArC,GAAqCA,EAAAE,EAAAH,EAAjCI,YAAiC,IAAAD,EAA1B,KAA0BA,EAAAE,EAAAL,EAApBM,YAAoB,IAAAD,EAAb,GAAaA,EAATE,EAASP,EAATO,MAC/CC,EADwDC,EAAAC,KACxDF,KAcFG,EAAkBT,GAAeM,EAAKI,aAAaV,YAEzD,OACEW,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,eAAgB,CACdb,QAEFc,eAAgB,CACdC,MAAO,wBAETZ,MAAOA,EACPa,cAAa,QAAUZ,EAAKI,aAAaL,MACzCD,KAAM,CACJ,CACEe,KAAI,cACJC,QAASX,GAEX,CACEY,SAAQ,WACRD,QAASf,GAEX,CACEgB,SAAQ,iBACRD,QAASX,GAEX,CACEY,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASd,EAAKI,aAAaY,QAE7B,CACEH,KAAI,gBACJC,QAASf,GAEX,CACEc,KAAI,sBACJC,QAASX,IAEXc,OAAOnB,GAEToB,OAAO,6MCzEb,IAAAC,EAAAnC,EAAA,GAAAoC,EAAApC,EAAAqC,EAAAF,GAAAG,EAAAtC,EAAA,IAGeE,EAAA,WAAAM,GAAA,IACH+B,EADG/B,EACbgC,OAAUD,KADGE,EAAAjC,EAEbkC,YAAe3B,EAFF0B,EAEE1B,MAAO4B,EAFTF,EAESE,KACtBC,EAHapC,EAGboC,QACAC,EAJarC,EAIbqC,WAJa,OAMbT,EAAAd,EAAAC,cAAA,OAAKuB,UAAU,QACbV,EAAAd,EAAAC,cAAA,UAAQuB,UAAU,6BAChBV,EAAAd,EAAAC,cAAA,OAAKuB,UAAU,uBACbV,EAAAd,EAAAC,cAAA,KAAGuB,UAAU,mBACXV,EAAAd,EAAAC,cAACe,EAAA,EAAD,CAAMS,GAAIR,GAAOxB,IAEnBqB,EAAAd,EAAAC,cAAA,KAAGuB,UAAU,sBACXV,EAAAd,EAAAC,cAAA,aACGoB,EADH,MACYE,EADZ,gBAMNT,EAAAd,EAAAC,cAAA,OAAKuB,UAAU,gBACbV,EAAAd,EAAAC,cAAA,OAAKuB,UAAU,WAAWF,wCCvBhC,IAAAT,EAAAnC,EAAA,GAAAoC,EAAApC,EAAAqC,EAAAF,GAAAG,EAAAtC,EAAA,IAAAgD,EAAAhD,EAAA,KAAAiD,EAAAjD,EAAA,KAKeE,EAAA,WAAAM,GAAqD,IAAA0C,EAAA1C,EAAlDU,KAAQiC,EAA0CD,EAA1CC,KAAMC,EAAoCF,EAApCE,MAAwBC,EAAY7C,EAA3B8C,YAAeD,IACtD,OACEjB,EAAAd,EAAAC,cAACY,EAAA,SAAD,KACEC,EAAAd,EAAAC,cAACyB,EAAA,EAAD,CAAKjC,MAAOsC,EAAG,UAAaA,EAAQ,SACpCjB,EAAAd,EAAAC,cAAA,WAASuB,UAAU,2BACjBV,EAAAd,EAAAC,cAAA,OAAKuB,UAAU,aACbV,EAAAd,EAAAC,cAAA,OAAKuB,UAAU,aACbV,EAAAd,EAAAC,cAAA,MAAIuB,UAAU,SAAd,WAINV,EAAAd,EAAAC,cAAA,OAAKuB,UAAU,oBACbV,EAAAd,EAAAC,cAAA,OAAKuB,UAAU,oBACbV,EAAAd,EAAAC,cAAA,OAAKuB,UAAU,yBACZM,EAAMG,MAAMC,IAAI,SAAAC,GAAI,OACnBrB,EAAAd,EAAAC,cAAA,OAAKmC,IAAKD,EAAKE,GAAIb,UAAU,kBAC3BV,EAAAd,EAAAC,cAAA,WAASuB,UAAU,iBACjBV,EAAAd,EAAAC,cAAC0B,EAAA,EAAgBQ,QAKzBrB,EAAAd,EAAAC,cAAA,OAAKuB,UAAU,8BACbV,EAAAd,EAAAC,cAAA,WAASuB,UAAU,iBACjBV,EAAAd,EAAAC,cAAA,KAAGuB,UAAU,SAAb,QACAV,EAAAd,EAAAC,cAAA,OAAKuB,UAAU,mBACZK,EAAKS,MAAMJ,IAAI,SAAAK,GAAA,IAAGC,EAAHD,EAAGC,WAAYC,EAAfF,EAAeE,WAAf,OACd3B,EAAAd,EAAAC,cAAA,QACEmC,IAAKI,EACLhB,UACEgB,IAAeT,EAAM,2BAA6B,OAGpDjB,EAAAd,EAAAC,cAACe,EAAA,EAAD,CACES,GACEe,IAAeT,EACX,SADJ,cAEkBS,EAFlB,KAKDA,EAPH,KAOiBC,EAPjB","file":"component---src-templates-blog-tag-js-48d5953071b358d631c7.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport Blog from \"../components/blog\";\n\nexport default Blog;\n\nexport const query = graphql`\n  query($tag: [String]) {\n    tags: allMarkdownRemark(\n      filter: { fields: { slug: { regex: \"//posts//\" } } }\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n    posts: allMarkdownRemark(\n      filter: {\n        fields: { slug: { regex: \"//posts//\" } }\n        frontmatter: { tags: { in: $tag } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        id\n        timeToRead\n        excerpt\n        frontmatter {\n          tags\n          date\n          title\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description = \"\", lang = \"en\", meta = [], title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      bodyAttributes={{\n        class: \"has-navbar-fixed-top\",\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n      // https://github.com/nfl/react-helmet/issues/315\n      defer={false}\n    />\n  );\n}\n\nexport default SEO;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport default ({\n  fields: { slug },\n  frontmatter: { title, date },\n  excerpt,\n  timeToRead,\n}) => (\n  <div className=\"card\">\n    <header className=\"card-header no-box-shadow\">\n      <div className=\"card-header-content\">\n        <p className=\"title is-size-3\">\n          <Link to={slug}>{title}</Link>\n        </p>\n        <p className=\"subtitle is-size-6\">\n          <small>\n            {date} â€¢ {timeToRead} min read\n          </small>\n        </p>\n      </div>\n    </header>\n    <div className=\"card-content\">\n      <div className=\"content\">{excerpt}</div>\n    </div>\n  </div>\n);\n","import React, { Fragment } from \"react\";\nimport { Link } from \"gatsby\";\nimport SEO from \"./seo\";\nimport BlogPreview from \"./blog-preview\";\n\nexport default ({ data: { tags, posts }, pageContext: { tag } }) => {\n  return (\n    <Fragment>\n      <SEO title={tag ? `Blog | ${tag}` : \"Blog\"} />\n      <section className=\"hero is-primary is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">Blog</h1>\n          </div>\n        </div>\n      </section>\n      <div className=\"padded-container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-vertical is-8\">\n            {posts.nodes.map(node => (\n              <div key={node.id} className=\"tile is-parent\">\n                <article className=\"tile is-child\">\n                  <BlogPreview {...node} />\n                </article>\n              </div>\n            ))}\n          </div>\n          <div className=\"tile is-vertical is-parent\">\n            <article className=\"tile is-child\">\n              <p className=\"title\">Tags</p>\n              <div className=\"tags are-medium\">\n                {tags.group.map(({ fieldValue, totalCount }) => (\n                  <span\n                    key={fieldValue}\n                    className={\n                      fieldValue === tag ? \"tag has-text-weight-bold\" : \"tag\"\n                    }\n                  >\n                    <Link\n                      to={\n                        fieldValue === tag\n                          ? \"/blog/\"\n                          : `/blog/tags/${fieldValue}/`\n                      }\n                    >\n                      {fieldValue} ({totalCount})\n                    </Link>\n                  </span>\n                ))}\n              </div>\n            </article>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}